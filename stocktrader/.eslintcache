[{"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\index.js":"1","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\App.js":"2","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\reportWebVitals.js":"3","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\Dashboard\\Dashboard.js":"4","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\MainPage\\Mainpage.js":"5","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\MainPage\\MainpageContext.js":"6","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\Copyright.js":"7","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\CandleChart\\CandleChart.js":"8","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\StockInfo\\StockInfo.js":"9","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\ProfileContexts\\FullProvider.js":"10","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\ProfileContexts\\SelectedSymbolProvider.js":"11","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\ProfileContexts\\AccountProvider.js":"12","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\ProfileContexts\\SymbolsProvider.js":"13","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\ProfileContexts\\SelectedStockDataProvider.js":"14"},{"size":666,"mtime":1606985056783,"results":"15","hashOfConfig":"16"},{"size":688,"mtime":1606985827333,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":4698,"mtime":1606942007465,"results":"19","hashOfConfig":"16"},{"size":3445,"mtime":1606985789674,"results":"20","hashOfConfig":"16"},{"size":3972,"mtime":1606944402802,"results":"21","hashOfConfig":"16"},{"size":459,"mtime":1606933432940,"results":"22","hashOfConfig":"16"},{"size":4757,"mtime":1606984887308,"results":"23","hashOfConfig":"16"},{"size":3293,"mtime":1606945874700,"results":"24","hashOfConfig":"16"},{"size":973,"mtime":1606945594350,"results":"25","hashOfConfig":"16"},{"size":514,"mtime":1606983445840,"results":"26","hashOfConfig":"16"},{"size":2225,"mtime":1606983432770,"results":"27","hashOfConfig":"16"},{"size":866,"mtime":1606984965879,"results":"28","hashOfConfig":"16"},{"size":1089,"mtime":1606983637193,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7wsvqb",{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\index.js",[],"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\App.js",["66","67"],"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\reportWebVitals.js",[],["68","69"],"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\Dashboard\\Dashboard.js",["70"],"import React,{ useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport {Link} from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 650,\r\n  },\r\n}));\r\n\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Portfolio\r\n          </Typography>\r\n          <Link to=\"/dashboard\" >\r\n            <Button>Dash</Button>\r\n          </Link>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>{[\"Trade stocks\", \"Sell Stocks\", \"Buy Stocks\"]}</List>\r\n        <Divider />\r\n        <List>Here comes secondary list</List>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\MainPage\\Mainpage.js",["71","72"],"import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CandleChart from '../CandleChart/CandleChart';\r\nimport Box from '@material-ui/core/Box';\r\nimport StockInfo from '../StockInfo/StockInfo';\r\nimport Copyright from '../Copyright';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  }, \r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 650,\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function Mainpage() {\r\n  const classes = useStyles();\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    return(\r\n      <div>\r\n        <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* Chart */}\r\n            <Grid item xs={12} md={8} lg={9}>\r\n              <Paper className={fixedHeightPaper}>\r\n                {/* <CandleChart  /> */} \r\n              </Paper>\r\n            </Grid>\r\n            {/* Recent Deposits */}\r\n            <Grid item xs={12} md={4} lg={3}>\r\n              <Paper className={fixedHeightPaper}>\r\n                {/* <StockInfo /> */}\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Copyright text={\"Stock Trader\"}/>\r\n          </Box>\r\n        </Container>\r\n        </main> \r\n      </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\MainPage\\MainpageContext.js",["73","74","75","76"],"import React, {createContext,useState, useEffect, useContext} from 'react';\r\nimport Axios from 'axios';\r\n\r\n\r\nexport const MainpageContext = createContext();\r\n\r\n\r\nexport const MainpageAccountProvider = (props) => {\r\n    const [AccData, setAccData] = useState(\r\n        {\r\n        \"id\": 8,\r\n        \"username\": \"Mr.T\",\r\n        \"cash\": 994836.94,\r\n        \"portfolio\": [\r\n          {\r\n            \"id\": 20,\r\n            \"stock\": {\r\n              \"id\": 1,\r\n              \"name\": \"Apple\",\r\n              \"symbol\": \"AAPL\"\r\n            },\r\n            \"purchasePrice\": 122.93,\r\n            \"quantity\": 42,\r\n            \"purchaseDate\": \"2020-12-01T17:50:29.232+00:00\"\r\n          },\r\n          {\r\n            \"id\": 11,\r\n            \"stock\": {\r\n              \"id\": 1,\r\n              \"name\": \"Apple\",\r\n              \"symbol\": \"AAPL\"\r\n            },\r\n            \"purchasePrice\": 170.23,\r\n            \"quantity\": 200,\r\n            \"purchaseDate\": \"2020-12-01T17:50:28.531+00:00\"\r\n          },\r\n          {\r\n            \"id\": 10,\r\n            \"stock\": {\r\n              \"id\": 1,\r\n              \"name\": \"Apple\",\r\n              \"symbol\": \"AAPL\"\r\n            },\r\n            \"purchasePrice\": 150.23,\r\n            \"quantity\": 100,\r\n            \"purchaseDate\": \"2020-12-01T17:50:28.449+00:00\"\r\n          }\r\n        ],\r\n        \"offers\": [\r\n          \r\n        ],\r\n        \"stockPerformanceList\": [\r\n          {\r\n            \"id\": 103,\r\n            \"stock\": {\r\n              \"id\": 1,\r\n              \"name\": \"Apple\",\r\n              \"symbol\": \"AAPL\"\r\n            },\r\n            \"stockTotalAmount\": 342,\r\n            \"averagePurchasePrice\": 158.57,\r\n            \"totalPurchaseValue\": 54232.06,\r\n            \"stockCurrentPrice\": 122.93,\r\n            \"stockCurrentValue\": 42042.06,\r\n            \"stockValueChange\": -0.22\r\n          }\r\n        ],\r\n        \"portfolioPerformance\": {\r\n          \"id\": 9,\r\n          \"portfolioTotalValue\": 1036879.0,\r\n          \"portfolioTotalStockValue\": 42042.06,\r\n          \"percentageStockValue\": 0.04,\r\n          \"percentageCashValue\": 0.96\r\n        }\r\n      });\r\n    \r\n      return(\r\n            <MainpageContext.Provider value={[AccData, setAccData]} >\r\n                {props.children}\r\n            </MainpageContext.Provider>\r\n        );\r\n}\r\n\r\nexport const MainpageSymbolProvider = (props) => {\r\n  const [Symbols, setSymbols] = useState();\r\n  const [AccData, setAccData] = useContext(MainpageContext);\r\n\r\n  useEffect(() =>{\r\n    console.log(\"USEEFFECT RUNS\");\r\n      scalpSymbols(AccData);\r\n  },[]);\r\n\r\n  function scalpSymbols(AccData) {\r\n    let myStocks = [];\r\n\r\n    AccData.portfolio.forEach(element => {\r\n      myStocks.push(element.symbol);\r\n    });\r\n    const uniqueArray = Array.from(new Set(myStocks));\r\n    setSymbols(uniqueArray);\r\n}\r\n  \r\n    return(\r\n          <MainpageContext.Provider value={[Symbols, setSymbols]} >\r\n              {props.children}\r\n          </MainpageContext.Provider>\r\n      );\r\n}\r\n\r\nexport const MainpageSelectedSymbolProvider = (props) => {\r\n  const [SelectedStockSymbol, setSelectedStockSymbol] = useState(\"AAPL\");\r\n  \r\n    \r\n  \r\n  \r\n    return(\r\n          <MainpageContext.Provider value={[SelectedStockSymbol, setSelectedStockSymbol]} >\r\n              {props.children}\r\n          </MainpageContext.Provider>\r\n      );\r\n}\r\n\r\nexport const MainpageSelectedStockDataProvider = (props) => {\r\n  const [SelectedStockData, setSelectedStockData] = useState({});\r\n  const [SelectedStockSymbol, setSelectedStockSymbol] = useContext(MainpageContext);\r\n\r\n  useEffect(() =>{\r\n      FetchStockData();\r\n  },[SelectedStockSymbol]) \r\n\r\n  const FetchStockData = () =>{\r\n    Axios.get(`http://localhost:8080/stock/getquote/${SelectedStockSymbol}`)\r\n      .then(function (response) {\r\n        setSelectedStockData(response.data);\r\n      })\r\n    \r\n  }\r\n  \r\n    return(\r\n          <MainpageContext.Provider value={[SelectedStockData, setSelectedStockData]} >\r\n              {props.children}\r\n          </MainpageContext.Provider>\r\n      );\r\n}",["77","78"],"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\Copyright.js",[],"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\CandleChart\\CandleChart.js",["79","80","81","82","83","84"],"import React,{useState, useEffect, useContext} from 'react';\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport dayjs from \"dayjs\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Axios from 'axios';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport {MainpageAccountContext} from '../ProfileContexts/AccountProvider';\r\nimport {MainpageSymbolsContext} from '../ProfileContexts/SymbolsProvider';\r\nimport {MainpageSelectedSymbolContext} from '../ProfileContexts/SelectedSymbolProvider';\r\nimport {MainpageSelectedStockDataContext} from '../ProfileContexts/SelectedStockDataProvider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  root: {\r\n    width: 700,\r\n    alignContent: \"center\"\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  container: {\r\n    maxWidth: \"70%\",\r\n    marginLeft:\"15%\",\r\n    marginRight:\"15%\",\r\n  },\r\n  btnGroup: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }\r\n}));\r\n\r\n\r\nfunction CandleChart() {\r\n    const [AccData, setAccData] = useContext(MainpageAccountContext);\r\n    const [Symbols, setSymbols] = useContext(MainpageSymbolsContext);\r\n    const [SelectedStockSymbol, setSelectedStokSymbol] = useContext(MainpageSelectedSymbolContext);\r\n    const [SelectedStockData, setSelectedStockData] = useContext(MainpageSelectedStockDataContext);\r\n    \r\n    const classes = useStyles(); \r\n\r\n    useEffect(() => {\r\n      console.log(\"CANDLE CHART IS LOADED\");\r\n      console.log(Symbols);\r\n      const resp = Axios.get(`http://localhost:8080/stock/getcandle/${SelectedStockSymbol}/5`);\r\n      setSelectedStockData(resp.reactCandleDataList);\r\n    },[SelectedStockSymbol]);\r\n\r\n    const handleChangeInInterval = (event) =>{\r\n      console.log(event.target.ariaValueNow);\r\n \r\n    }\r\n\r\n    const handleStockChange = (event) =>{\r\n      console.log(event.target.innerText);\r\n    }\r\n\r\n    const series = [{\r\n        name: 'candle',\r\n        data: SelectedStockData? SelectedStockData : 0\r\n      }];\r\n\r\n      const options = {\r\n        chart: {\r\n          height: 350,\r\n          type: 'candlestick',\r\n        },\r\n        title: {\r\n          text: `Candle chart of: ${\"SelectedStockSymbol\"}`,\r\n          align: 'center'\r\n        },\r\n        annotations: {\r\n          xaxis: [\r\n            {\r\n              x: 'Oct 06 14:00',\r\n              borderColor: '#00E396',\r\n              label: {\r\n                borderColor: '#00E396',\r\n                style: {\r\n                  fontSize: '12px',\r\n                  color: '#fff',\r\n                  background: '#00E396'\r\n                },\r\n                orientation: 'horizontal',\r\n                offsetY: 7,\r\n                text: 'Annotation Test'\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        tooltip: {\r\n          enabled: true,\r\n        },\r\n        xaxis: {\r\n          type: 'category',\r\n          labels: {\r\n            formatter: function(val) {\r\n              return dayjs(val).format('MMM DD HH:mm')\r\n            }\r\n          }\r\n        },\r\n        yaxis: {\r\n          tooltip: {\r\n            enabled: true\r\n            }\r\n        }\r\n    };\r\n\r\n    function valuetext(value) {\r\n      return `${value}`;\r\n    }\r\n\r\n    return(\r\n      <div>\r\n        <div className={classes.container}>\r\n            <ReactApexChart options={options} series={series} type=\"candlestick\" height={350} />\r\n        </div>\r\n        <div className={classes.root}>\r\n            <Typography id=\"discrete-slider\" gutterBottom>\r\n              Fetch interval\r\n            </Typography>\r\n            <Slider\r\n              key={1}\r\n              defaultValue={0} //Here comes Fetch interval\r\n              getAriaValueText={valuetext}\r\n              aria-labelledby=\"discrete-slider\"\r\n              valueLabelDisplay=\"auto\"\r\n              step={100000}\r\n              marks\r\n              min={100000}\r\n              max={600000}\r\n              onChange={handleChangeInInterval} //Disabled due to refactor\r\n      />\r\n        </div> \r\n        <div className={classes.btnGroup}>\r\n        <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\r\n          {/* Symbols.map(SYMBOL =>{\r\n            return(<Button onClick={handleStockChange}>{SYMBOL}</Button>)\r\n          }) */}\r\n          <Button  onClick={handleStockChange}>GOOGL</Button>\r\n          <Button  onClick={handleStockChange}>FB</Button>\r\n        </ButtonGroup>\r\n        </div>\r\n      </div>\r\n    )\r\n};\r\n\r\nexport default CandleChart; ","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\StockInfo\\StockInfo.js",["85","86"],"import React,{useContext, useEffect, useState} from 'react';\r\nimport cx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { useContainedCardHeaderStyles } from '@mui-treasury/styles/cardHeader/contained';\r\nimport { useSoftRiseShadowStyles } from '@mui-treasury/styles/shadow/softRise';\r\nimport { useFadedShadowStyles } from '@mui-treasury/styles/shadow/faded';\r\nimport {MainpageSelectedStockDataContext} from '../ProfileContexts/SelectedStockDataProvider';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(({ spacing }) => ({\r\n  card: {\r\n    marginTop: 40,\r\n    borderRadius: spacing(0.5),\r\n    transition: '0.3s',\r\n    width: '90%',\r\n    overflow: 'initial',\r\n    background: '#ffffff',\r\n  },\r\n  content: {\r\n    paddingTop: 0,\r\n    textAlign: 'left',\r\n    overflowX: 'auto',\r\n    '& table': {\r\n      marginBottom: 0,\r\n    }\r\n  },\r\n}));\r\n\r\n\r\nexport default function StockInfo() {\r\n    const [SelectedStockData, setSelectedStockData] = useContext(MainpageSelectedStockDataContext);\r\n\r\n\r\n    const classes = useStyles();\r\n    const cardHeaderStyles = useContainedCardHeaderStyles();\r\n    const cardShadowStyles = useSoftRiseShadowStyles({ inactive: true });\r\n    const cardHeaderShadowStyles = useFadedShadowStyles();\r\n    const [Rows, setRows] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const rows = [\r\n          {id: 0,  type: \"Current price: \", value: SelectedStockData.currentPrice},\r\n          {id: 1,  type: \"Open price: \", value: SelectedStockData.openPrice },\r\n          {id: 2,  type: \"Highest price\", value: SelectedStockData.highPrice },\r\n          {id: 3,  type: \"Lowest price\", value: SelectedStockData.lowPrice },\r\n          {id: 3,  type: \"Previous price\", value: SelectedStockData.previousClosePrice },\r\n        ];\r\n        setRows(rows);\r\n        console.log(SelectedStockData);\r\n        // setStockName(SelectedStockData.stock.name);\r\n         \r\n    }, [])\r\n\r\n\r\n  return (\r\n    <Card className={cx(classes.card, cardShadowStyles.root)}>\r\n      <CardHeader\r\n        className={cardHeaderShadowStyles.root}\r\n        classes={cardHeaderStyles}\r\n        title={SelectedStockData.stock.name}\r\n        subheader={`Performance of ${SelectedStockData.stock.name}`}\r\n      />\r\n      <CardContent className={classes.content}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Type</TableCell>\r\n              <TableCell align=\"right\">Value</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {Rows.map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.type}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.value}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\ProfileContexts\\FullProvider.js",[],"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\ProfileContexts\\SelectedSymbolProvider.js",[],"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\ProfileContexts\\AccountProvider.js",[],"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\ProfileContexts\\SymbolsProvider.js",[],"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\ProfileContexts\\SelectedStockDataProvider.js",["87","88"],"import React, {createContext,useState, useEffect, useContext} from 'react';\r\nimport {MainpageSelectedSymbolContext} from './SelectedSymbolProvider';\r\nimport Axios from 'axios';\r\n\r\nexport const MainpageSelectedStockDataContext = createContext([]);\r\n\r\nexport const MainpageSelectedStockDataProvider = (props) => {\r\n    const [SelectedStockData, setSelectedStockData] = useState({});\r\n    const [SelectedStockSymbol, setSelectedStockSymbol] = useContext(MainpageSelectedSymbolContext);\r\n  \r\n    useEffect(() =>{\r\n        FetchStockData();\r\n    },[SelectedStockSymbol]) \r\n  \r\n    const FetchStockData = () =>{\r\n      Axios.get(`http://localhost:8080/stock/getquote/${SelectedStockSymbol}`)\r\n        .then(function (response) {\r\n          console.log(\"SYMOL\", SelectedStockSymbol);\r\n          setSelectedStockData(response.data);\r\n        })\r\n      \r\n    }\r\n    \r\n      return(\r\n            <MainpageSelectedStockDataContext.Provider value={[SelectedStockData, setSelectedStockData]} >\r\n                {props.children}\r\n            </MainpageSelectedStockDataContext.Provider>\r\n        );\r\n  }",{"ruleId":"89","severity":1,"message":"90","line":6,"column":9,"nodeType":"91","messageId":"92","endLine":6,"endColumn":21},{"ruleId":"89","severity":1,"message":"93","line":7,"column":8,"nodeType":"91","messageId":"92","endLine":7,"endColumn":19},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"89","severity":1,"message":"98","line":112,"column":9,"nodeType":"91","messageId":"92","endLine":112,"endColumn":25},{"ruleId":"89","severity":1,"message":"93","line":5,"column":8,"nodeType":"91","messageId":"92","endLine":5,"endColumn":19},{"ruleId":"89","severity":1,"message":"99","line":7,"column":8,"nodeType":"91","messageId":"92","endLine":7,"endColumn":17},{"ruleId":"89","severity":1,"message":"100","line":86,"column":19,"nodeType":"91","messageId":"92","endLine":86,"endColumn":29},{"ruleId":"101","severity":1,"message":"102","line":91,"column":5,"nodeType":"103","endLine":91,"endColumn":7,"suggestions":"104"},{"ruleId":"89","severity":1,"message":"105","line":125,"column":31,"nodeType":"91","messageId":"92","endLine":125,"endColumn":53},{"ruleId":"101","severity":1,"message":"106","line":129,"column":5,"nodeType":"103","endLine":129,"endColumn":26,"suggestions":"107"},{"ruleId":"94","replacedBy":"108"},{"ruleId":"96","replacedBy":"109"},{"ruleId":"89","severity":1,"message":"110","line":1,"column":15,"nodeType":"91","messageId":"92","endLine":1,"endColumn":23},{"ruleId":"89","severity":1,"message":"111","line":44,"column":12,"nodeType":"91","messageId":"92","endLine":44,"endColumn":19},{"ruleId":"89","severity":1,"message":"100","line":44,"column":21,"nodeType":"91","messageId":"92","endLine":44,"endColumn":31},{"ruleId":"89","severity":1,"message":"112","line":45,"column":21,"nodeType":"91","messageId":"92","endLine":45,"endColumn":31},{"ruleId":"89","severity":1,"message":"113","line":46,"column":33,"nodeType":"91","messageId":"92","endLine":46,"endColumn":54},{"ruleId":"101","severity":1,"message":"114","line":56,"column":7,"nodeType":"103","endLine":56,"endColumn":28,"suggestions":"115"},{"ruleId":"89","severity":1,"message":"116","line":40,"column":31,"nodeType":"91","messageId":"92","endLine":40,"endColumn":51},{"ruleId":"101","severity":1,"message":"117","line":61,"column":8,"nodeType":"103","endLine":61,"endColumn":10,"suggestions":"118"},{"ruleId":"89","severity":1,"message":"105","line":9,"column":33,"nodeType":"91","messageId":"92","endLine":9,"endColumn":55},{"ruleId":"101","severity":1,"message":"106","line":13,"column":7,"nodeType":"103","endLine":13,"endColumn":28,"suggestions":"119"},"no-unused-vars","'FullProvider' is defined but never used.","Identifier","unusedVar","'CandleChart' is defined but never used.","no-native-reassign",["120"],"no-negated-in-lhs",["121"],"'fixedHeightPaper' is assigned a value but never used.","'StockInfo' is defined but never used.","'setAccData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'AccData'. Either include it or remove the dependency array.","ArrayExpression",["122"],"'setSelectedStockSymbol' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'FetchStockData'. Either include it or remove the dependency array.",["123"],["120"],["121"],"'useState' is defined but never used.","'AccData' is assigned a value but never used.","'setSymbols' is assigned a value but never used.","'setSelectedStokSymbol' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Symbols' and 'setSelectedStockData'. Either include them or remove the dependency array.",["124"],"'setSelectedStockData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'SelectedStockData'. Either include it or remove the dependency array.",["125"],["126"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"129","fix":"135"},"Update the dependencies array to be: [AccData]",{"range":"136","text":"137"},"Update the dependencies array to be: [FetchStockData, SelectedStockSymbol]",{"range":"138","text":"139"},"Update the dependencies array to be: [SelectedStockSymbol, Symbols, setSelectedStockData]",{"range":"140","text":"141"},"Update the dependencies array to be: [SelectedStockData]",{"range":"142","text":"143"},{"range":"144","text":"139"},[2510,2512],"[AccData]",[3544,3565],"[FetchStockData, SelectedStockSymbol]",[1937,1958],"[SelectedStockSymbol, Symbols, setSelectedStockData]",[2308,2310],"[SelectedStockData]",[543,564]]