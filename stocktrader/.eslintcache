[{"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\index.js":"1","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\App.js":"2","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\reportWebVitals.js":"3","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\ProfileContexts\\AccountProvider.js":"4","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\AppBar\\AppBar.js":"5","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\MainPage\\Mainpage.js":"6","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\Copyright.js":"7","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\Charts\\PieChart.js":"8","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\StockInfo\\StockInfo.js":"9","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\Offers\\Offers.js":"10","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\MyStocks\\MyStocks.js":"11","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\StockListPage\\StockListPage.js":"12","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\StockListPage\\StockList.js":"13","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\StockCard\\StockCard.js":"14"},{"size":671,"mtime":1607005208360,"results":"15","hashOfConfig":"16"},{"size":530,"mtime":1607027321531,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":770,"mtime":1607005208353,"results":"19","hashOfConfig":"16"},{"size":3202,"mtime":1607009167885,"results":"20","hashOfConfig":"16"},{"size":4483,"mtime":1607025755802,"results":"21","hashOfConfig":"16"},{"size":459,"mtime":1607005208348,"results":"22","hashOfConfig":"16"},{"size":1052,"mtime":1607005208347,"results":"23","hashOfConfig":"16"},{"size":2628,"mtime":1607007686927,"results":"24","hashOfConfig":"16"},{"size":3720,"mtime":1607007639666,"results":"25","hashOfConfig":"16"},{"size":3998,"mtime":1607007573958,"results":"26","hashOfConfig":"16"},{"size":3875,"mtime":1607030785608,"results":"27","hashOfConfig":"16"},{"size":374,"mtime":1607028887316,"results":"28","hashOfConfig":"16"},{"size":2104,"mtime":1607026065109,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"7wsvqb",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"32"},"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\index.js",[],["67","68"],"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\App.js",[],"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\reportWebVitals.js",[],"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\ProfileContexts\\AccountProvider.js",["69"],"import React, {createContext,useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\n\r\nexport const MainpageAccountContext = createContext();\r\n\r\n\r\nexport const MainpageAccountProvider = (props) => {\r\n    const [AccData, setAccData] = useState({});\r\n    \r\n    useEffect(() => {\r\n      FetchData();\r\n    }, []);\r\n\r\n    const FetchData = () => {\r\n      console.log(\"trying to fetch\");\r\n\r\n      \r\n\r\n      Axios.get(\"http://localhost:8080/user/getuseraccount\")\r\n        .then(resp => setAccData(resp.data));\r\n\r\n      console.log(\"finished fetch\", AccData);\r\n    } \r\n    \r\n\r\n      return(\r\n            <MainpageAccountContext.Provider value={[AccData, setAccData]} >\r\n                {props.children}\r\n            </MainpageAccountContext.Provider>\r\n        );\r\n  \r\n} ","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\AppBar\\AppBar.js",["70","71","72","73"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\n{/*\r\nconst useStyles = makeStyles((theme) => ({\r\nbaseDiv: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\n*/}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: 'auto',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap>\r\n            StockTrader\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <div className={classes.drawerContainer}>\r\n          <List>\r\n            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\MainPage\\Mainpage.js",["74","75"],"import React,{useContext, useEffect} from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PieChart from '../Charts/PieChart';\r\nimport Box from '@material-ui/core/Box';\r\nimport StockInfo from '../StockInfo/StockInfo';\r\nimport Copyright from '../Copyright';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport {MainpageAccountContext} from '../ProfileContexts/AccountProvider';\r\nimport OfferList from '../Offers/Offers';\r\nimport MyStocks from '../MyStocks/MyStocks';\r\n\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  }, \r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    justifyContent: \"center\",\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  fixedHeight: {\r\n    height: 650,\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function Mainpage() {\r\n  const classes = useStyles();\r\n  const [AccData, setAccData] = useContext(MainpageAccountContext);\r\n  \r\n  useEffect(() => {\r\n    console.log(\"ACCDATA: \", AccData)\r\n  }, []);\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  \r\n  if (AccData.portfolioPerformance === undefined){\r\n    return(\r\n      <h1>loading data...</h1>\r\n    )\r\n  } else {\r\n    console.log(\"ACCDATA: \", AccData);\r\n    return(\r\n      <div>\r\n        <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <h1 style = {{textAlign: \"center\"}}>PORTFOLIO SUMMARY</h1>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* Chart */}\r\n            <Grid item xs={12} md={8} lg={9}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <PieChart series={[AccData.portfolioPerformance.percentageStockValue, AccData.portfolioPerformance.percentageCashValue]} />\r\n              </Paper>\r\n            </Grid>\r\n            {/* Recent Deposits */}\r\n            <Grid item xs={12} md={4} lg={3}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <StockInfo Performance={AccData.portfolioPerformance} />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={8} lg={9}>\r\n              <Paper>\r\n                <OfferList />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={8} lg={9}>\r\n              <Paper>\r\n                <MyStocks />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Copyright text={\"Stock Trader\"}/>\r\n          </Box>\r\n        </Container>\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\Copyright.js",[],"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\Charts\\PieChart.js",["76","77"],"import React,{useState, useEffect} from 'react';\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nexport default function PieChart(props) {\r\n    const [State, setState] = useState(\r\n        {\r\n        series: props.series,\r\n        options: {\r\n        chart: {\r\n            width: '50%',\r\n            type: 'donut',\r\n        },\r\n        labels: ['Stock', 'Cash'],\r\n        dataLabels: {\r\n            enabled: true\r\n        },\r\n        responsive: [{\r\n            breakpoint: '50%',\r\n            options: {\r\n            chart: {\r\n                width: '50%'\r\n            },\r\n            legend: {\r\n                show: false\r\n            }\r\n            }\r\n        }],\r\n        legend: {\r\n            position: 'right',\r\n            offsetY: 0,\r\n            height: 230,\r\n        }\r\n    }}\r\n    );\r\n  \r\n\r\n return (\r\n  <div>\r\n    <div className=\"chart-wrap\">\r\n      <div id=\"chart\">\r\n      <ReactApexChart options={State? State.options : {}} series={State? State.series : []} type=\"donut\" width={\"200%\"} />\r\n      </div>\r\n    </div>\r\n  </div>\r\n )\r\n}\r\n","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\StockInfo\\StockInfo.js",["78","79"],"import React,{useContext, useEffect, useState} from 'react';\r\nimport cx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { useContainedCardHeaderStyles } from '@mui-treasury/styles/cardHeader/contained';\r\nimport { useSoftRiseShadowStyles } from '@mui-treasury/styles/shadow/softRise';\r\nimport { useFadedShadowStyles } from '@mui-treasury/styles/shadow/faded';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(({ spacing }) => ({\r\n  card: {\r\n    marginTop: 40,\r\n    borderRadius: spacing(0.5),\r\n    transition: '0.3s',\r\n    width: '90%',\r\n    overflow: 'initial',\r\n    background: '#ffffff',\r\n  },\r\n  content: {\r\n    paddingTop: 0,\r\n    textAlign: 'left',\r\n    overflowX: 'auto',\r\n    '& table': {\r\n      marginBottom: 0,\r\n    }\r\n  },\r\n}));\r\n\r\n\r\nexport default function StockInfo(props) {\r\n    const classes = useStyles();\r\n    const cardHeaderStyles = useContainedCardHeaderStyles();\r\n    const cardShadowStyles = useSoftRiseShadowStyles({ inactive: true });\r\n    const cardHeaderShadowStyles = useFadedShadowStyles();\r\n    const [Rows, setRows] = useState([]);\r\n\r\n    useEffect(() => {\r\n      console.log(props);\r\n        const rows = [\r\n          {id: 0,  type: \"Portfolio value: \", value: `$${props.Performance.portfolioTotalValue}`},\r\n          {id: 1,  type: \"Stock value: \", value: `$ ${props.Performance.portfolioTotalStockValue}` },\r\n        ];\r\n        setRows(rows);\r\n    }, [])\r\n\r\n\r\n  return (\r\n    <Card className={cx(classes.card, cardShadowStyles.root)}>\r\n      <CardHeader\r\n        className={cardHeaderShadowStyles.root}\r\n        classes={cardHeaderStyles}\r\n        title={\"Portfolio performance\"}\r\n        subheader={\"Detailed view of portfolio\"}\r\n      />\r\n      <CardContent className={classes.content}>\r\n        <Table>\r\n          <TableHead>\r\n          </TableHead>\r\n          <TableBody>\r\n            {Rows.map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.type}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.value}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\Offers\\Offers.js",["80","81"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {MainpageAccountContext} from '../ProfileContexts/AccountProvider';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n}));\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  \r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n\r\nexport default function OfferList() {\r\n  const [AccData, setAccData] = useContext(MainpageAccountContext);\r\n  const [Offers, setOffers] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n      setOffers(AccData.offers);\r\n  }, [])\r\n\r\n\r\n  if(AccData === undefined) {\r\n      return(<div>Loading...</div>)\r\n  } else {\r\n  return (\r\n    <div className={classes.root}>\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography className={classes.heading}>Offers</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Stock name</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Stock symbol</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Offer type</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Offer price</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Amount</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Offer value</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {Offers.map((offer) => (\r\n            <StyledTableRow key={offer.id}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {offer.stock.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{offer.stock.symbol}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{offer.offerType}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{`$ ${offer.price}`}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{offer.quantity}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{`$ ${offer.quantity * offer.price}`}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n          }\r\n\r\n}","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\MyStocks\\MyStocks.js",["82","83"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {MainpageAccountContext} from '../ProfileContexts/AccountProvider';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n}));\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  \r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n\r\nexport default function MyStocks() {\r\n  const [AccData, setAccData] = useContext(MainpageAccountContext);\r\n  const [MyStocks, setMyStocks] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n      setMyStocks(AccData.stockPerformanceList);\r\n  }, [])\r\n\r\n\r\n  if(AccData === undefined) {\r\n      return(<div>Loading...</div>)\r\n  } else {\r\n  return (\r\n    <div className={classes.root}>\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography className={classes.heading}>Stocks</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Stock name</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Stock symbol</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Avg purchase price</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Total purchase value</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Current price</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Current value</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Value change</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {MyStocks.map((myStock) => (\r\n            <StyledTableRow key={myStock.id}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {myStock.stock.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{myStock.stock.symbol}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{`$ ${myStock.averagePurchasePrice}`}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{`$ ${myStock.totalPurchaseValue}`}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{`$ ${myStock.stockCurrentPrice}`}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{`$ ${myStock.stockCurrentValue}`}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{`${myStock.stockValueChange} %`}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n          }\r\n\r\n}","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\StockListPage\\StockListPage.js",["84"],"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\StockListPage\\StockList.js",["85","86","87"],"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\StockCard\\StockCard.js",["88","89","90"],"import Axios from 'axios';\r\nimport React,{useState, useEffect} from 'react';\r\nimport {CryptoCard} from \"react-ui-flex-cards\";\r\n\r\n\r\n\r\nfunction StockCard(props) {\r\n  const [StockData, setStockData] = useState({});\r\n  const [TrendDirection, setTrendDirection] = useState(0);\r\n  const [Trend, setTrend] = useState(0);\r\n  \r\n\r\n  const FetchData = () =>{\r\n    Axios.get(`http://localhost:8080/stock/getquote/${props.Symbol}`)\r\n        .then(resp => setStockData(resp.data))\r\n        .then(response => console.log(\"RESP: \", response.data));\r\n  }\r\n\r\n  const calculateTrendDirection = () => {\r\n    if(StockData.currentPrice >  StockData.previousClosePrice){\r\n      setTrendDirection(1);\r\n    } else if (StockData.currentPrice <  StockData.previousClosePrice){\r\n      setTrendDirection(-1);\r\n    } else {\r\n      setTrendDirection(0);\r\n    }\r\n  }\r\n\r\n  const calculateTrend = () => {\r\n    var result =  100 * Math.abs( ( StockData.previousClosePrice - StockData.currentPrice ) / ( (StockData.previousClosePrice + StockData.currentPrice)/2 ) );\r\n\r\n    setTrend(result.toFixed(2));\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    FetchData();\r\n\r\n\r\n  },[]);\r\n\r\n  useEffect(()=>{\r\n    if(StockData.stock){\r\n      console.log(\"Trends calculated\", StockData.name);\r\n      calculateTrend();\r\n      calculateTrendDirection();\r\n    }\r\n    \r\n  },[StockData])\r\n  \r\n    return(\r\n        <div style={{background: \"rgba(63,76,107,0.35)\"}}>\r\n        <CryptoCard\r\n          style={{background: \"rgba(63,76,107,0.35)\"}}\r\n          currencyName={StockData.stock? StockData.stock.name : \"Name\"}\r\n          currencyPrice={StockData.stock? `$ ${StockData.currentPrice}` : 0}\r\n          icon={<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/46/Bitcoin.svg/2000px-Bitcoin.svg.png\"/>}\r\n          currencyShortName={StockData.stock? StockData.stock.symbol : \"Symbol\"}\r\n          trend={StockData.stock? `${Trend} %` : 0}\r\n          trendDirection={StockData.stock? TrendDirection : 0} \r\n          chartData={[9200, 5720, 8100, 6734, 7054, 7832, 6421, 7383, 8697, 8850]}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default StockCard;",{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":12,"column":8,"nodeType":"97","endLine":12,"endColumn":10,"suggestions":"98"},{"ruleId":"99","severity":1,"message":"100","line":6,"column":8,"nodeType":"101","messageId":"102","endLine":6,"endColumn":14},{"ruleId":"99","severity":1,"message":"103","line":7,"column":8,"nodeType":"101","messageId":"102","endLine":7,"endColumn":18},{"ruleId":"99","severity":1,"message":"104","line":8,"column":8,"nodeType":"101","messageId":"102","endLine":8,"endColumn":16},{"ruleId":"105","severity":1,"message":"106","line":22,"column":1,"nodeType":"107","messageId":"108","endLine":52,"endColumn":4},{"ruleId":"99","severity":1,"message":"109","line":103,"column":19,"nodeType":"101","messageId":"102","endLine":103,"endColumn":29},{"ruleId":"95","severity":1,"message":"110","line":107,"column":6,"nodeType":"97","endLine":107,"endColumn":8,"suggestions":"111"},{"ruleId":"99","severity":1,"message":"112","line":1,"column":25,"nodeType":"101","messageId":"102","endLine":1,"endColumn":34},{"ruleId":"99","severity":1,"message":"113","line":5,"column":19,"nodeType":"101","messageId":"102","endLine":5,"endColumn":27},{"ruleId":"99","severity":1,"message":"114","line":1,"column":15,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"115","line":52,"column":8,"nodeType":"97","endLine":52,"endColumn":10,"suggestions":"116"},{"ruleId":"99","severity":1,"message":"109","line":50,"column":19,"nodeType":"101","messageId":"102","endLine":50,"endColumn":29},{"ruleId":"95","severity":1,"message":"117","line":56,"column":6,"nodeType":"97","endLine":56,"endColumn":8,"suggestions":"118"},{"ruleId":"99","severity":1,"message":"109","line":50,"column":19,"nodeType":"101","messageId":"102","endLine":50,"endColumn":29},{"ruleId":"95","severity":1,"message":"119","line":56,"column":6,"nodeType":"97","endLine":56,"endColumn":8,"suggestions":"120"},{"ruleId":null,"fatal":true,"severity":2,"message":"121","line":120,"column":12},{"ruleId":"99","severity":1,"message":"122","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":20},{"ruleId":"99","severity":1,"message":"123","line":3,"column":8,"nodeType":"101","messageId":"102","endLine":3,"endColumn":13},{"ruleId":"99","severity":1,"message":"124","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":12},{"ruleId":"95","severity":1,"message":"96","line":40,"column":5,"nodeType":"97","endLine":40,"endColumn":7,"suggestions":"125"},{"ruleId":"95","severity":1,"message":"126","line":49,"column":5,"nodeType":"97","endLine":49,"endColumn":16,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":57,"column":17,"nodeType":"130","endLine":57,"endColumn":122},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'FetchData'. Either include it or remove the dependency array.","ArrayExpression",["133"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'setAccData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'AccData'. Either include it or remove the dependency array.",["134"],"'useEffect' is defined but never used.","'setState' is assigned a value but never used.","'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["135"],"React Hook useEffect has a missing dependency: 'AccData.offers'. Either include it or remove the dependency array.",["136"],"React Hook useEffect has a missing dependency: 'AccData.stockPerformanceList'. Either include it or remove the dependency array.",["137"],"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 118 | \u001b[39m          \u001b[33m<\u001b[39m\u001b[33mContainer\u001b[39m maxWidth\u001b[33m=\u001b[39m\u001b[32m\"lg\"\u001b[39m className\u001b[33m=\u001b[39m{classes\u001b[33m.\u001b[39mcontainer}\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 119 | \u001b[39m        \u001b[33m<\u001b[39m\u001b[33mPaper\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 120 | \u001b[39m          {\u001b[36mconst\u001b[39m rows \u001b[33m=\u001b[39m \u001b[33mSymbolChunks\u001b[39m\u001b[33m.\u001b[39mmap((symbolChunk\u001b[33m,\u001b[39m index) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m     | \u001b[39m           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 121 | \u001b[39m            \u001b[36mconst\u001b[39m symbolCols \u001b[33m=\u001b[39m \u001b[33mSymbolChunks\u001b[39m\u001b[33m.\u001b[39mmap((symbol\u001b[33m,\u001b[39m index) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 122 | \u001b[39m              \u001b[36mreturn\u001b[39m(\u001b[0m\n\u001b[0m \u001b[90m 123 | \u001b[39m                \u001b[33m<\u001b[39m\u001b[33mGrid\u001b[39m item xs\u001b[33m=\u001b[39m{\u001b[35m4\u001b[39m}\u001b[33m>\u001b[39m\u001b[0m","'makeStyles' is defined but never used.","'Paper' is defined but never used.","'Grid' is defined but never used.",["138"],"React Hook useEffect has missing dependencies: 'calculateTrend' and 'calculateTrendDirection'. Either include them or remove the dependency array.",["139"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"140","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [FetchData]",{"range":"153","text":"154"},"Update the dependencies array to be: [AccData]",{"range":"155","text":"156"},"Update the dependencies array to be: [props]",{"range":"157","text":"158"},"Update the dependencies array to be: [AccData.offers]",{"range":"159","text":"160"},"Update the dependencies array to be: [AccData.stockPerformanceList]",{"range":"161","text":"162"},{"range":"163","text":"154"},"Update the dependencies array to be: [StockData, calculateTrend, calculateTrendDirection]",{"range":"164","text":"165"},[313,315],"[FetchData]",[2889,2891],"[AccData]",[1818,1820],"[props]",[1797,1799],"[AccData.offers]",[1816,1818],"[AccData.stockPerformanceList]",[1124,1126],[1310,1321],"[StockData, calculateTrend, calculateTrendDirection]"]