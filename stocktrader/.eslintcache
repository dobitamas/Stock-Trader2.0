[{"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\index.js":"1","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\reportWebVitals.js":"2","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\ProfileContexts\\AccountProvider.js":"3","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\App.js":"4","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\AppBar\\AppBar.js":"5","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\MainPage\\Mainpage.js":"6","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\Copyright.js":"7","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\Charts\\PieChart.js":"8","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\MyStocks\\MyStocks.js":"9","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\Offers\\Offers.js":"10","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\Info\\StockInfo.js":"11","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\Info\\AccountInfo.js":"12","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\DetailedStockPage\\DetailedStockPage.js":"13","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\Charts\\CandleChart.js":"14","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\ProfileContexts\\SelectedSymbolProvider.js":"15","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\ProfileContexts\\SymbolsProvider.js":"16","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\ProfileContexts\\SelectedStockDataProvider.js":"17","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\Info\\DetailedStockInfo.js":"18"},{"size":671,"mtime":1607005208360,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":3433,"mtime":1607072440399,"results":"22","hashOfConfig":"20"},{"size":578,"mtime":1607071192127,"results":"23","hashOfConfig":"20"},{"size":2642,"mtime":1607069780776,"results":"24","hashOfConfig":"20"},{"size":3419,"mtime":1607070216516,"results":"25","hashOfConfig":"20"},{"size":459,"mtime":1607005208348,"results":"26","hashOfConfig":"20"},{"size":1052,"mtime":1607005208347,"results":"27","hashOfConfig":"20"},{"size":3998,"mtime":1607007573958,"results":"28","hashOfConfig":"20"},{"size":3720,"mtime":1607007639666,"results":"29","hashOfConfig":"20"},{"size":2635,"mtime":1607069780779,"results":"30","hashOfConfig":"20"},{"size":2746,"mtime":1607070164812,"results":"31","hashOfConfig":"20"},{"size":3133,"mtime":1607074157847,"results":"32","hashOfConfig":"20"},{"size":15937,"mtime":1607072883530,"results":"33","hashOfConfig":"20"},{"size":514,"mtime":1607005208356,"results":"34","hashOfConfig":"20"},{"size":866,"mtime":1607005208357,"results":"35","hashOfConfig":"20"},{"size":1089,"mtime":1607005208355,"results":"36","hashOfConfig":"20"},{"size":2980,"mtime":1607074178680,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17q49cm",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"49"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\index.js",[],"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\reportWebVitals.js",[],"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\ProfileContexts\\AccountProvider.js",["82","83"],"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\App.js",[],"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\AppBar\\AppBar.js",["84","85","86"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\n\r\nconst drawerWidth = \"10%\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: 'auto',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap>\r\n            StockTrader\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <div className={classes.drawerContainer}>\r\n          <List>\r\n            {['Overview', 'Stock Watch', 'Trade', 'CopyTrader'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            {['...', '...', '...'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}",["87","88"],"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\MainPage\\Mainpage.js",["89","90"],"import React,{useContext, useEffect} from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PieChart from '../Charts/PieChart';\r\nimport Box from '@material-ui/core/Box';\r\nimport StockInfo from '../Info/StockInfo';\r\nimport AccountInfo from '../Info/AccountInfo';\r\nimport Copyright from '../Copyright';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport {MainpageAccountContext} from '../ProfileContexts/AccountProvider';\r\nimport OfferList from '../Offers/Offers';\r\nimport MyStocks from '../MyStocks/MyStocks';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n    maxWidth: \"90%\",\r\n    paddingLeft: \"10%\"\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    justifyContent: \"center\",\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  fixedHeight: {\r\n    height: \"100%\",\r\n  },\r\n  pieChart: {\r\n    maxWidth: \"50%\"\r\n  },\r\n  tables: {\r\n    minWidth: \"100%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\"\r\n  }\r\n}));\r\n\r\nexport default function Mainpage() {\r\n  const classes = useStyles();\r\n  const [AccData, setAccData] = useContext(MainpageAccountContext);\r\n  \r\n  useEffect(() => {\r\n    console.log(\"ACCDATA: \", AccData)\r\n  }, []);\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  \r\n  if (AccData.portfolioPerformance === undefined){\r\n    return(\r\n      <h1>loading data...</h1>\r\n    )\r\n  } else {\r\n    console.log(\"ACCDATA: \", AccData);\r\n    return(\r\n      <div>\r\n        <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <h1 style = {{textAlign: \"center\"}}>PORTFOLIO SUMMARY</h1>\r\n        <Container className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* Chart */}\r\n            <Grid item xs={12} md={8} lg={9} className={classes.pieChart}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <PieChart series={[AccData.portfolioPerformance.percentageStockValue, AccData.portfolioPerformance.percentageCashValue]} />\r\n              </Paper>\r\n            </Grid>\r\n            {/* Recent Deposits */}\r\n            <Grid item xs={12} md={4} lg={3} >\r\n              <Paper className={fixedHeightPaper}>\r\n                <StockInfo Performance={AccData.portfolioPerformance} />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={4} lg={3}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <AccountInfo AccData={AccData} />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n        <Container className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={8} lg={9} className={classes.tables}>\r\n              <Paper>\r\n                <OfferList />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={8} lg={9} className={classes.tables}>\r\n              <Paper>\r\n                <MyStocks />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Copyright text={\"Stock Trader\"}/>\r\n          </Box>\r\n        </Container>\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\Copyright.js",[],"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\Charts\\PieChart.js",["91","92"],"import React,{useState, useEffect} from 'react';\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nexport default function PieChart(props) {\r\n    const [State, setState] = useState(\r\n        {\r\n        series: props.series,\r\n        options: {\r\n        chart: {\r\n            width: '50%',\r\n            type: 'donut',\r\n        },\r\n        labels: ['Stock', 'Cash'],\r\n        dataLabels: {\r\n            enabled: true\r\n        },\r\n        responsive: [{\r\n            breakpoint: '50%',\r\n            options: {\r\n            chart: {\r\n                width: '50%'\r\n            },\r\n            legend: {\r\n                show: false\r\n            }\r\n            }\r\n        }],\r\n        legend: {\r\n            position: 'right',\r\n            offsetY: 0,\r\n            height: 230,\r\n        }\r\n    }}\r\n    );\r\n  \r\n\r\n return (\r\n  <div>\r\n    <div className=\"chart-wrap\">\r\n      <div id=\"chart\">\r\n      <ReactApexChart options={State? State.options : {}} series={State? State.series : []} type=\"donut\" width={\"200%\"} />\r\n      </div>\r\n    </div>\r\n  </div>\r\n )\r\n}\r\n","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\MyStocks\\MyStocks.js",["93","94"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {MainpageAccountContext} from '../ProfileContexts/AccountProvider';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n}));\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  \r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n\r\nexport default function MyStocks() {\r\n  const [AccData, setAccData] = useContext(MainpageAccountContext);\r\n  const [MyStocks, setMyStocks] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n      setMyStocks(AccData.stockPerformanceList);\r\n  }, [])\r\n\r\n\r\n  if(AccData === undefined) {\r\n      return(<div>Loading...</div>)\r\n  } else {\r\n  return (\r\n    <div className={classes.root}>\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography className={classes.heading}>Stocks</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Stock name</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Stock symbol</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Avg purchase price</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Total purchase value</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Current price</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Current value</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Value change</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {MyStocks.map((myStock) => (\r\n            <StyledTableRow key={myStock.id}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {myStock.stock.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{myStock.stock.symbol}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{`$ ${myStock.averagePurchasePrice}`}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{`$ ${myStock.totalPurchaseValue}`}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{`$ ${myStock.stockCurrentPrice}`}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{`$ ${myStock.stockCurrentValue}`}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{`${myStock.stockValueChange} %`}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n          }\r\n\r\n}","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\Offers\\Offers.js",["95","96"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {MainpageAccountContext} from '../ProfileContexts/AccountProvider';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n}));\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  \r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n\r\nexport default function OfferList() {\r\n  const [AccData, setAccData] = useContext(MainpageAccountContext);\r\n  const [Offers, setOffers] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n      setOffers(AccData.offers);\r\n  }, [])\r\n\r\n\r\n  if(AccData === undefined) {\r\n      return(<div>Loading...</div>)\r\n  } else {\r\n  return (\r\n    <div className={classes.root}>\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography className={classes.heading}>Offers</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Stock name</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Stock symbol</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Offer type</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Offer price</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Amount</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Offer value</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {Offers.map((offer) => (\r\n            <StyledTableRow key={offer.id}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {offer.stock.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{offer.stock.symbol}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{offer.offerType}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{`$ ${offer.price}`}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{offer.quantity}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{`$ ${offer.quantity * offer.price}`}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n          }\r\n\r\n}","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\Info\\StockInfo.js",["97","98"],"import React,{useContext, useEffect, useState} from 'react';\r\nimport cx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { useContainedCardHeaderStyles } from '@mui-treasury/styles/cardHeader/contained';\r\nimport { useSoftRiseShadowStyles } from '@mui-treasury/styles/shadow/softRise';\r\nimport { useFadedShadowStyles } from '@mui-treasury/styles/shadow/faded';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(({ spacing }) => ({\r\n  card: {\r\n    marginTop: 40,\r\n    borderRadius: spacing(0.5),\r\n    transition: '0.3s',\r\n    width: '90%',\r\n    overflow: 'initial',\r\n    background: '#ffffff',\r\n  },\r\n  content: {\r\n    paddingTop: 0,\r\n    textAlign: 'left',\r\n    overflowX: 'auto',\r\n    '& table': {\r\n      marginBottom: 0,\r\n    }\r\n  },\r\n}));\r\n\r\n\r\nexport default function StockInfo(props) {\r\n    const classes = useStyles();\r\n    const cardHeaderStyles = useContainedCardHeaderStyles();\r\n    const cardShadowStyles = useSoftRiseShadowStyles({ inactive: true });\r\n    const cardHeaderShadowStyles = useFadedShadowStyles();\r\n    const [Rows, setRows] = useState([]);\r\n\r\n    useEffect(() => {\r\n      console.log(props);\r\n        const rows = [\r\n          {id: 0,  type: \"Portfolio value: \", value: `$${props.Performance.portfolioTotalValue}`},\r\n          {id: 1,  type: \"Stock value: \", value: `$ ${props.Performance.portfolioTotalStockValue}` },\r\n        ];\r\n        setRows(rows);\r\n    }, [])\r\n\r\n\r\n  return (\r\n    <Card className={cx(classes.card, cardShadowStyles.root)}>\r\n      <CardHeader\r\n        className={cardHeaderShadowStyles.root}\r\n        classes={cardHeaderStyles}\r\n        title={\"Portfolio performance\"}\r\n        subheader={\"Detailed view of portfolio/profit\"}\r\n      />\r\n      <CardContent className={classes.content}>\r\n        <Table>\r\n          <TableHead>\r\n          </TableHead>\r\n          <TableBody>\r\n            {Rows.map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.type}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.value}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\Info\\AccountInfo.js",["99","100"],"import React,{useContext, useEffect, useState} from 'react';\r\nimport cx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { useContainedCardHeaderStyles } from '@mui-treasury/styles/cardHeader/contained';\r\nimport { useSoftRiseShadowStyles } from '@mui-treasury/styles/shadow/softRise';\r\nimport { useFadedShadowStyles } from '@mui-treasury/styles/shadow/faded';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(({ spacing }) => ({\r\n  card: {\r\n    marginTop: 40,\r\n    borderRadius: spacing(0.5),\r\n    transition: '0.3s',\r\n    width: '90%',\r\n    overflow: 'initial',\r\n    background: '#ffffff',\r\n  },\r\n  content: {\r\n    paddingTop: 0,\r\n    textAlign: 'left',\r\n    overflowX: 'auto',\r\n    '& table': {\r\n      marginBottom: 0,\r\n    }\r\n  },\r\n}));\r\n\r\n\r\nexport default function AccountInfo(props) {\r\n    const classes = useStyles();\r\n    const cardHeaderStyles = useContainedCardHeaderStyles();\r\n    const cardShadowStyles = useSoftRiseShadowStyles({ inactive: true });\r\n    const cardHeaderShadowStyles = useFadedShadowStyles();\r\n    const [Rows, setRows] = useState([]);\r\n\r\n    useEffect(() => {\r\n      console.log(props);\r\n        const rows = [\r\n          {id: 0,  type: \"Name: \", value: `${props.AccData.username}`},\r\n          {id: 1,  type: \"Cash: \", value: `$ ${props.AccData.cash}` },\r\n          {id: 1,  type: \"Number of offers: \", value: `${props.AccData.offers.length}` },\r\n          {id: 1,  type: \"Number of stocks: \", value: `${props.AccData.portfolio.length}` },\r\n        ];\r\n        setRows(rows);\r\n    }, [])\r\n\r\n\r\n  return (\r\n    <Card className={cx(classes.card, cardShadowStyles.root)}>\r\n      <CardHeader\r\n        className={cardHeaderShadowStyles.root}\r\n        classes={cardHeaderStyles}\r\n        title={\"Account info\"}\r\n        subheader={\"Detailed view of account\"}\r\n      />\r\n      <CardContent className={classes.content}>\r\n        <Table>\r\n          <TableHead>\r\n          </TableHead>\r\n          <TableBody>\r\n            {Rows.map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.type}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.value}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\DetailedStockPage\\DetailedStockPage.js",["101","102","103"],"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\Charts\\CandleChart.js",["104","105","106","107","108","109","110"],"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\ProfileContexts\\SelectedSymbolProvider.js",[],"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\ProfileContexts\\SymbolsProvider.js",[],"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\ProfileContexts\\SelectedStockDataProvider.js",["111","112"],"C:\\Users\\Tamás\\source\\repos\\stock-trader2.0\\stocktrader\\src\\components\\Info\\DetailedStockInfo.js",["113","114"],{"ruleId":"115","severity":1,"message":"116","line":1,"column":40,"nodeType":"117","messageId":"118","endLine":1,"endColumn":49},{"ruleId":"115","severity":1,"message":"119","line":2,"column":8,"nodeType":"117","messageId":"118","endLine":2,"endColumn":13},{"ruleId":"115","severity":1,"message":"120","line":6,"column":8,"nodeType":"117","messageId":"118","endLine":6,"endColumn":14},{"ruleId":"115","severity":1,"message":"121","line":7,"column":8,"nodeType":"117","messageId":"118","endLine":7,"endColumn":18},{"ruleId":"115","severity":1,"message":"122","line":8,"column":8,"nodeType":"117","messageId":"118","endLine":8,"endColumn":16},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"115","severity":1,"message":"127","line":48,"column":19,"nodeType":"117","messageId":"118","endLine":48,"endColumn":29},{"ruleId":"128","severity":1,"message":"129","line":52,"column":6,"nodeType":"130","endLine":52,"endColumn":8,"suggestions":"131"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":25,"nodeType":"117","messageId":"118","endLine":1,"endColumn":34},{"ruleId":"115","severity":1,"message":"132","line":5,"column":19,"nodeType":"117","messageId":"118","endLine":5,"endColumn":27},{"ruleId":"115","severity":1,"message":"127","line":50,"column":19,"nodeType":"117","messageId":"118","endLine":50,"endColumn":29},{"ruleId":"128","severity":1,"message":"133","line":56,"column":6,"nodeType":"130","endLine":56,"endColumn":8,"suggestions":"134"},{"ruleId":"115","severity":1,"message":"127","line":50,"column":19,"nodeType":"117","messageId":"118","endLine":50,"endColumn":29},{"ruleId":"128","severity":1,"message":"135","line":56,"column":6,"nodeType":"130","endLine":56,"endColumn":8,"suggestions":"136"},{"ruleId":"115","severity":1,"message":"137","line":1,"column":15,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"138","line":52,"column":8,"nodeType":"130","endLine":52,"endColumn":10,"suggestions":"139"},{"ruleId":"115","severity":1,"message":"137","line":1,"column":15,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"138","line":54,"column":8,"nodeType":"130","endLine":54,"endColumn":10,"suggestions":"140"},{"ruleId":"115","severity":1,"message":"127","line":55,"column":19,"nodeType":"117","messageId":"118","endLine":55,"endColumn":29},{"ruleId":"115","severity":1,"message":"141","line":56,"column":21,"nodeType":"117","messageId":"118","endLine":56,"endColumn":33},{"ruleId":"128","severity":1,"message":"129","line":74,"column":6,"nodeType":"130","endLine":74,"endColumn":8,"suggestions":"142"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":15,"nodeType":"117","messageId":"118","endLine":1,"endColumn":24},{"ruleId":"115","severity":1,"message":"119","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":13},{"ruleId":"115","severity":1,"message":"143","line":29,"column":12,"nodeType":"117","messageId":"118","endLine":29,"endColumn":19},{"ruleId":"115","severity":1,"message":"144","line":29,"column":21,"nodeType":"117","messageId":"118","endLine":29,"endColumn":31},{"ruleId":"115","severity":1,"message":"145","line":30,"column":33,"nodeType":"117","messageId":"118","endLine":30,"endColumn":54},{"ruleId":"115","severity":1,"message":"146","line":31,"column":31,"nodeType":"117","messageId":"118","endLine":31,"endColumn":51},{"ruleId":"147","severity":1,"message":"148","line":747,"column":5,"nodeType":"149","messageId":"150","endLine":755,"endColumn":6},{"ruleId":"115","severity":1,"message":"151","line":9,"column":33,"nodeType":"117","messageId":"118","endLine":9,"endColumn":55},{"ruleId":"128","severity":1,"message":"152","line":13,"column":7,"nodeType":"130","endLine":13,"endColumn":28,"suggestions":"153"},{"ruleId":"115","severity":1,"message":"137","line":1,"column":15,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"138","line":56,"column":8,"nodeType":"130","endLine":56,"endColumn":10,"suggestions":"154"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Axios' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","no-native-reassign",["155"],"no-negated-in-lhs",["156"],"'setAccData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'AccData'. Either include it or remove the dependency array.","ArrayExpression",["157"],"'setState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'AccData.stockPerformanceList'. Either include it or remove the dependency array.",["158"],"React Hook useEffect has a missing dependency: 'AccData.offers'. Either include it or remove the dependency array.",["159"],"'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["160"],["161"],"'setStockData' is assigned a value but never used.",["162"],"'Symbols' is assigned a value but never used.","'setSymbols' is assigned a value but never used.","'setSelectedStokSymbol' is assigned a value but never used.","'setSelectedStockData' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'setSelectedStockSymbol' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'FetchStockData'. Either include it or remove the dependency array.",["163"],["164"],"no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"171","fix":"173"},{"desc":"165","fix":"174"},{"desc":"175","fix":"176"},{"desc":"171","fix":"177"},"Update the dependencies array to be: [AccData]",{"range":"178","text":"179"},"Update the dependencies array to be: [AccData.stockPerformanceList]",{"range":"180","text":"181"},"Update the dependencies array to be: [AccData.offers]",{"range":"182","text":"183"},"Update the dependencies array to be: [props]",{"range":"184","text":"185"},{"range":"186","text":"185"},{"range":"187","text":"179"},"Update the dependencies array to be: [FetchStockData, SelectedStockSymbol]",{"range":"188","text":"189"},{"range":"190","text":"185"},[1428,1430],"[AccData]",[1816,1818],"[AccData.stockPerformanceList]",[1797,1799],"[AccData.offers]",[1818,1820],"[props]",[1947,1949],[1872,1874],[543,564],"[FetchStockData, SelectedStockSymbol]",[2150,2152]]